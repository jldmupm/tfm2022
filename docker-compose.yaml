version: "3.3"

# see: https://docs.dask.org/en/stable/deploying-docker.html
# for configuration options

services:
  mongodb:
    container_name: mongo

    image: mongo:5
    volumes:
      - ./containers/conf/mongo/conf/mongod.conf:/etc/mongod.conf
      - ./containers/conf/mongo/script:/docker-entrypoint-initdb.d
      - ../data/mongo-datadir:/data/db
      - ../data/mongo-log:/var/log/mongodb/
    ports:
      - 27017:27017

  # to visualize mongodb content:
  mongo-express:
    container_name: mongo-express
    
    image: mongo-express:latest
    restart: always
    depends_on:
      - mongodb
    ports:
      - 8081:8081

  # redis:
  #   container_name: redis
    
  #   image: redis:7.0.2-alpine

  #   command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  #   ports:
  #     - "6379:6379"

  #   volumes:
  #     - ../data/redis-data:/var/lib/redis
  #     - ./containers/conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
      
  #   environment:
  #     - REDIS_REPLICATION_MODE=master

  # tfm2022-dask-scheduler:
  #   container_name: tfm2022-scheduler

  #   image: ghcr.io/dask/dask
  #   # build:
  #   #   context: .
  #   #   dockerfile: ./containers/dockerfiles/node/Dockerfile
  #   restart: always
  #   entrypoint: dask-scheduler  # start scheduler
  #   environment:
  #     - EXTRA_PIP_PACKAGES="pymongo firebase-admin"
  #   ports:
  #     - 8787:8787
  #     - 8786:8786
  #   expose:
  #     - 8786

  # tfm2022-dask-worker-1:
  #   container_name: tfm2022-worker1

  #   image: ghcr.io/dask/dask
  #   # build:
  #   #   context: .
  #   #   dockerfile: ./containers/dockerfiles/node/Dockerfile
  #   restart: always
  #   depends_on:
  #     - tfm2022-dask-scheduler
  #   entrypoint: dask-worker tfm2022-scheduler:8786 --name d-worker1 # start worker

  # fastapi-server:
  #   container_name: tfm2022-fastapi

  #   env_file: ./.env.distributed
  #   build:
  #     context: .
  #     dockerfile: ./containers/dockerfiles/fastapi/Dockerfile
  #   restart: always
  #   depends_on:
  #      - tfm2022-dask-scheduler
  #   ports:
  #     - 9090:80
  #   volumes:
  #     - ./keys:/opt/app/keys
      
  # TODO: Â¿esto funciona en un 
  # https://devopsheaven.com/cron/docker/alpine/linux/2017/10/30/run-cron-docker-alpine.html
  # cron files:
  # - 15min
  # - hourly
  # - daily
  # - weekly
  # - monthly
  # Scripts inside of cron_tasks_folder have to be without extension and with +x permissions.
  cron:
    container_name: alpine_cron
    image: alpine
    command: crond -f -l 8 # run 
    volumes:
      - ../data/cron_tasks_folder/daily:/etc/periodic/daily/:ro
      
    
# using the default network. all the containers are discoverable in a host by using the container name
